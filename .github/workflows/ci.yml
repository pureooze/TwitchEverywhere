# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release
      - name: Test
        run: dotnet test --no-build --verbosity normal --configuration Release
      - name: Pack (Core)
        run: dotnet pack TwitchEverywhere.Core --no-build --configuration Release -o nupkg
      - name: Pack (IRC)
        run: dotnet pack TwitchEverywhere.Irc --no-build --configuration Release -o nupkg
      - name: Pack (Rest)
        run: dotnet pack TwitchEverywhere.Rest --no-build --configuration Release -o nupkg
      - name: Publish
        if: github.ref == 'refs/heads/main'
        run: 
          dotnet nuget push nupkg/VodOnDemand.TwitchEverywhere.Rest*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json;
          dotnet nuget push nupkg/VodOnDemand.TwitchEverywhere.Irc*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json;
          dotnet nuget push nupkg/VodOnDemand.TwitchEverywhere.Core*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json;
